<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CANNOT_SELF_REP" xml:space="preserve">
    <value>Sorry {0}, you cannot influence your own reputation! Try influencing other people instead. :smirk:{{OR}}
Aww, {0}... I can't do that. If you need your reputation to change, try blackmailing others to do it for you.{{OR}}
Hey {0}, did you really think you could influence yourself? Get some friends to do that for you.{{OR}}
Did {0} just try to influence someone that isn't me?! Wait, they tried to self-rep? Hah!</value>
    <comment>Invoker Username</comment>
  </data>
  <data name="GPL3_NOTICE" xml:space="preserve">
    <value>Miunie, the community driven Discord bot with an attitude.
Copyright (C) {0:yyyy}  [control-net](https://github.com/control-net)

This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.


Source code available at: {1}</value>
    <comment>Target Copyright Year string, Muinie Repo URL string</comment>
  </data>
  <data name="GUILD_EMBED_CREATED_AT_TITLE" xml:space="preserve">
    <value>:calendar: Creation date</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="GUILD_EMBED_NAME_TITLE" xml:space="preserve">
    <value>Name</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="GUILD_EMBED_ROLES_TITLE" xml:space="preserve">
    <value>Roles</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="GUILD_EMBED_STATS_TITLE" xml:space="preserve">
    <value>Server stats</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="GUILD_EMBED_TITLE" xml:space="preserve">
    <value>**ABOUT THIS SERVER**</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="INCORRECT_VERB" xml:space="preserve">
    <value>You better start making sense with other than '{0}'{{OR}}
Come again, I don't understand '{0}'{{OR}}
Let's try that one more time and try something different than '{0}'{{OR}}
What does '{0}' mean here?</value>
    <comment>Verb string</comment>
  </data>
  <data name="REPUTATION_GIVEN" xml:space="preserve">
    <value>**{0}** just got reputation from {1}! :trophy:{{OR}}
**{0}** just got reputation from {1}! :fireworks:{{OR}}
**{0}** just got reputation from {1}! :tada:{{OR}}
**{0}** was given some reputation by {1}! What's in it for me, though? :thinking:</value>
    <comment>Target Username, Invoker Username</comment>
  </data>
  <data name="REPUTATION_GIVEN_BOT" xml:space="preserve">
    <value>What a nice gesture {0}... giving me +rep!{{OR}}
I'll remember this {0}. Thanks for the +rep!{{OR}}
Wow, check out {0} they just gave me +rep!</value>
  </data>
  <data name="REPUTATION_TAKEN" xml:space="preserve">
    <value>**{0}** just had reputation removed from {1} :({{OR}}
**{0}** just had reputation removed from {1} :'({{OR}}
**{0}** just had reputation removed from {1} :sob:</value>
    <comment>Target Username, Invoker Username</comment>
  </data>
  <data name="REPUTATION_TAKEN_BOT" xml:space="preserve">
    <value>{0} you are not nice! Taking my rep...{{OR}}
{0} you better watch your back, I got your number now!{{OR}}
{0} taking things that don't belong to you is not nice. I miss my rep!</value>
  </data>
  <data name="SHOW_REMOTE_REPO" xml:space="preserve">
    <value>You can find my source code on GitHub:
https://github.com/discord-bot-tutorial/Miunie</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="TIME_MESSAGE_INFO_EDIT" xml:space="preserve">
    <value>Oh yeah, message {0} was created {1} but was also edited on {2}{{OR}}
{1} was when {0} was created, but it was edited {2}</value>
    <comment>Message Id ulong, Message Created DateTime, Message Edited DateTime</comment>
  </data>
  <data name="TIME_MESSAGE_INFO_NO_EDIT" xml:space="preserve">
    <value>Found it! {0} was first seen {1}{{OR}}
Sneaky, sneaky, {0} was first spotted {1}{{OR}}
{0} was launched {1}</value>
    <comment>Message Id ulong. Message Created DateTime</comment>
  </data>
  <data name="TIME_NEW_OFFSET_SET" xml:space="preserve">
    <value>Congratulations! Your current time was stored!{{OR}}
Alright, I'll remember your time.{{OR}}
Cool, if someone asks, this meeting didn't happen. (but I'll totally remember what time it is for you)</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="TIME_NEW_OFFSET_SET_ADMIN" xml:space="preserve">
    <value>Congratulations! {0}'s current time was stored!{{OR}}
Alright, I'll remember {0}'s time.{{OR}}
Cool, if someone asks, this meeting didn't happen. (but I'll totally remember what time it is for {0})</value>
    <comment>Target Username</comment>
  </data>
  <data name="TIME_NO_MESSAGE_INFO" xml:space="preserve">
    <value>Nope! Nobody by that name here{{OR}}
I asked everyone, but nobody knows...{{OR}}
Sorry, couldn't find what you are looking for!</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="TIME_NO_TIMEZONE_INFO" xml:space="preserve">
    <value>:question: I have no idea what time it is for {0}.{{OR}}
:question: {0} is one of **THOSE** people. They don't have their time set.</value>
    <comment>Target Username</comment>
  </data>
  <data name="TIME_TIMEZONE_INFO" xml:space="preserve">
    <value>:clock1: For {0} it's currently {1:HH:mm}{{OR}}
:clock1: It's currently {1:HH:mm} where {0} is at.{{OR}}
:clock1: Believe it or not, it's {1:HH:mm} right now in {0} land.{{OR}}
:clock1: Time flies, but not so much for {0}, 'cause for them it's {1:HH:mm}.</value>
    <comment>Target Username, Time string</comment>
  </data>
  <data name="TIME_USERTIME_FROM_LOCAL" xml:space="preserve">
    <value>Awesome it's {0:HH:mm} for you and {2:HH:mm} for {1}{{OR}}
Far out it's {0:HH:mm} locally and {2:HH:mm} where {1} is at!{{OR}}
No way it's {0:HH:mm} and for {1} it's {2:HH:mm}{{OR}}
{0:HH:mm} somewhere but for {1} it's {2:HH:mm}{{OR}}
It's {2:HH:mm} at {1}'s house, when it's {0:HH:mm} for you!</value>
    <comment>Input Time string, Target Username, Target Time string</comment>
  </data>
  <data name="TIME_USERTIME_IN_FUTURE" xml:space="preserve">
    <value>It will be {1:HH:mm} for {0} in {2} {3}{{OR}}
In {2} {3} it's {1:HH:mm} at {0}'s house!{{OR}}
{1:HH:mm} in {0} land in about {2} {3}</value>
    <comment>Target Username, Target Time string, Time Units int, Timeframe string</comment>
  </data>
  <data name="TIME_USERTIME_IN_FUTURE_UNPARSABLE" xml:space="preserve">
    <value>I don't understand what in {0} {1} means{{OR}}
Me no understand {0} {1}!{{OR}}
What are you trying to say with {0} {1}</value>
    <comment>Time Units int, Timeframe string</comment>
  </data>
  <data name="USER_EMBED_CREATED_AT_TITLE" xml:space="preserve">
    <value>:calendar_spiral: Creation date</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_IS_BOT" xml:space="preserve">
    <value>_A software person._{{OR}}
_A bot._ :robot:{{OR}}
_Soon to be our AI overlord._</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_IS_HUMAN" xml:space="preserve">
    <value>_Passes ReCaptcha,
so I guess they're real._{{OR}}
_A real human being._{{OR}}
_Real flesh, bones,
blood, all that._</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_JOINED_AT_TITLE" xml:space="preserve">
    <value>:calendar: Joined</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_NAME_TITLE" xml:space="preserve">
    <value>:label: Name</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_REALNESS_TITLE" xml:space="preserve">
    <value>:electric_plug: Bot or not{{OR}}
:electric_plug: Human/Bot</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_REP_LOG_EMPTY" xml:space="preserve">
    <value>Reputation? What's that?{{OR}}
I don't see any reputation here...{{OR}}
I've caught you empty-repped!</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_REP_LOG_TITLE" xml:space="preserve">
    <value>**REPUTATION LOG**</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_REP_TITLE" xml:space="preserve">
    <value>:fleur_de_lis: Reputation</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_ROLES_TITLE" xml:space="preserve">
    <value>:dolls: Roles</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_TIME" xml:space="preserve">
    <value>It's currently {0:HH:mm} over there :){{OR}}
Their clock shows {0:HH:mm} right now.</value>
    <comment>Time string</comment>
  </data>
  <data name="USER_EMBED_TIME_NOSET" xml:space="preserve">
    <value>I have no idea what time it is for them.{{OR}}
No time set :cry:{{OR}}
Twelve... ten... -ish... Yeah I have no idea.</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_TIME_TITLE" xml:space="preserve">
    <value>:clock4: Local time</value>
    <comment>No formatting options.</comment>
  </data>
  <data name="USER_EMBED_TITLE" xml:space="preserve">
    <value>**{0} AWESOME PROFILE**{{OR}}
**{0} COOL PROFILE**{{OR}}
**{0} MAGNIFICENT PROFILE**{{OR}}
**{0} DANK PROFILE**</value>
    <comment>Target Username</comment>
  </data>
  <data name="USER_PRIVACY_DATA_REMOVED" xml:space="preserve">
    <value>{0}, your personal data has been removed from Miunie</value>
    <comment>Target Username</comment>
  </data>
  <data name="USER_PRIVACY_FILE_MESSAGE" xml:space="preserve">
    <value>The file named {0}.json contains all the data Miunie knows about you. Please refer to the ``personal data remove`` command to remove your personal data from Miunie.</value>
    <comment>Target Username</comment>
  </data>
  <data name="YES_NO_MAYBE" xml:space="preserve">
    <value>Chances are good{{OR}}
No looking good{{OR}}
Try again later</value>
    <comment>No formatting options.</comment>
  </data>
</root>